// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace mtyhostal.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250920073513_AddIsActiveToResidencia")]
    partial class AddIsActiveToResidencia
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CiudadSede", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CiudadesSede");
                });

            modelBuilder.Entity("ImagenResidencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ResidenciaId")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ResidenciaId");

                    b.ToTable("ImagenesResidencia");
                });

            modelBuilder.Entity("Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Estatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Monto")
                        .HasColumnType("numeric");

                    b.Property<int>("ReservacionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReservacionId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("Reservacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Estatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("HuespedId")
                        .HasColumnType("integer");

                    b.Property<decimal>("PrecioTotal")
                        .HasColumnType("numeric");

                    b.Property<int>("ResidenciaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HuespedId");

                    b.HasIndex("ResidenciaId");

                    b.ToTable("Reservaciones");
                });

            modelBuilder.Entity("Residencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnfitrionId")
                        .HasColumnType("integer");

                    b.Property<int>("CiudadSedeId")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<decimal>("PrecioPorNoche")
                        .HasColumnType("numeric");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AnfitrionId");

                    b.HasIndex("CiudadSedeId");

                    b.ToTable("Residencias");
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("FotoPerfilPublicId")
                        .HasColumnType("text");

                    b.Property<string>("FotoPerfilUrl")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Rol")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ImagenResidencia", b =>
                {
                    b.HasOne("Residencia", "Residencia")
                        .WithMany("Imagenes")
                        .HasForeignKey("ResidenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Residencia");
                });

            modelBuilder.Entity("Pago", b =>
                {
                    b.HasOne("Reservacion", "Reservacion")
                        .WithMany()
                        .HasForeignKey("ReservacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservacion");
                });

            modelBuilder.Entity("Reservacion", b =>
                {
                    b.HasOne("Usuario", "Huesped")
                        .WithMany("ReservacionesComoHuesped")
                        .HasForeignKey("HuespedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Residencia", "Residencia")
                        .WithMany("Reservaciones")
                        .HasForeignKey("ResidenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Huesped");

                    b.Navigation("Residencia");
                });

            modelBuilder.Entity("Residencia", b =>
                {
                    b.HasOne("Usuario", "Anfitrion")
                        .WithMany("ResidenciasComoAnfitrion")
                        .HasForeignKey("AnfitrionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CiudadSede", "Ciudad")
                        .WithMany("Residencias")
                        .HasForeignKey("CiudadSedeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anfitrion");

                    b.Navigation("Ciudad");
                });

            modelBuilder.Entity("CiudadSede", b =>
                {
                    b.Navigation("Residencias");
                });

            modelBuilder.Entity("Residencia", b =>
                {
                    b.Navigation("Imagenes");

                    b.Navigation("Reservaciones");
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.Navigation("ReservacionesComoHuesped");

                    b.Navigation("ResidenciasComoAnfitrion");
                });
#pragma warning restore 612, 618
        }
    }
}
